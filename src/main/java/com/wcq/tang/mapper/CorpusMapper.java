package com.wcq.tang.mapper;

import com.wcq.tang.model.Corpus;
import com.wcq.tang.model.CorpusExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.CachePut;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.cache.annotation.Caching;

public interface CorpusMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    long countByExample(CorpusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @CacheEvict(cacheNames = {"cora","coru"},allEntries = true)
    int deleteByExample(CorpusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @Caching(evict = {
            @CacheEvict(cacheNames = {"cora","coru"},allEntries = true),
            @CacheEvict(cacheNames = "cor",key = "#corpusId")
    })
    int deleteByPrimaryKey(Long corpusId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @CacheEvict(cacheNames = {"cora","coru"},allEntries = true)
    int insert(Corpus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @CacheEvict(cacheNames = {"cora","coru"},allEntries = true)
    int insertSelective(Corpus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    List<Corpus> selectByExample(CorpusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @Cacheable(cacheNames = "cor")
    Corpus selectByPrimaryKey(Long corpusId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @Caching(evict = {
            @CacheEvict(cacheNames = {"cora","coru"},allEntries = true),
            @CacheEvict(cacheNames = "cor",allEntries = true)
    })
    int updateByExampleSelective(@Param("record") Corpus record, @Param("example") CorpusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @Caching(evict = {
            @CacheEvict(cacheNames = {"cora","coru"},allEntries = true),
            @CacheEvict(cacheNames = "cor",allEntries = true)
    })
    int updateByExample(@Param("record") Corpus record, @Param("example") CorpusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @Caching(evict = {
            @CacheEvict(cacheNames = {"cora","coru"},allEntries = true),
            @CacheEvict(cacheNames = "cor",key = "#record.corpusId")
    })
    int updateByPrimaryKeySelective(Corpus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corpus
     *
     * @mbg.generated Sun Mar 15 15:31:58 CST 2020
     */
    @Caching(evict = {
            @CacheEvict(cacheNames = {"cora","coru"},allEntries = true),
            @CacheEvict(cacheNames = "cor",key = "#record.corpusId")
    })
    int updateByPrimaryKey(Corpus record);
}